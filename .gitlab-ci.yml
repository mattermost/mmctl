stages:
  - test
  - publish

include:
  project: mattermost/ci/mmctl
  ref: master
  file: private.yml

variables:
  IMAGE_BUILD_MMCTL: $CI_REGISTRY/mattermost/ci/images/mattermost-build-server:20220415_golang-1.18.1
  IMAGE_BUILD_SERVER: $CI_REGISTRY/mattermost/ci/images/mattermost-build-server:20220415_golang-1.18.1

docs:
  stage: test
  image: $IMAGE_BUILD_MMCTL
  script:
    - echo $CI_COMMIT_REF_NAME
    - echo "Making sure docs are updated"
    - make docs
    - if [[ -n $(git status --porcelain) ]]; then echo "Please update the docs using make docs"; exit 1; fi
  except:
    - tags

lint:
  stage: test
  image: docker.io/golangci/golangci-lint:v1.46.2
  script:
    - echo "Installing mattermost-govet"
    - GO111MODULE=off go get -u github.com/mattermost/mattermost-govet
    - make check
  except:
    - tags

.test-mysql:
  stage: test
  image: $CI_REGISTRY/mattermost/ci/images/mattermost-build-docker:19.03.14-1
  services:
    - name: $CI_REGISTRY/mattermost/ci/images/docker-dind:19.03.14-1
      alias: docker
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_CONTENT_TRUST: 0
    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ""
  before_script:
    - docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD}
  script:
    - export COMPOSE_PROJECT_NAME="${CI_PIPELINE_IID}mysql"
    - time cat .gitlab-ci/scripts/test/mysql.sh | /bin/bash
  artifacts:
    when: always
    reports:
      junit: report.xml
    paths:
      - scripts/logs
  timeout: 2 hours
  tags:
    - k8s-memory
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

build:
  stage: test
  image: $IMAGE_BUILD_MMCTL
  script:
    - make package
  artifacts:
    paths:
      - build
    expire_in: 3 hours
